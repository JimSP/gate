/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 11 03:41:39 BRST 2018
 */

package com.github.jimsp.gate.entities;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

import com.github.jimsp.gate.rbac.entities.Resource;

public class Resource_ESTest {

	@Test
	public void test00() throws Throwable {
		Resource resource0 = new Resource();
		resource0.setName("o");
		resource0.hashCode();
	}

	@Test
	public void test01() throws Throwable {
		Resource resource0 = new Resource();
		Boolean boolean0 = new Boolean(true);
		resource0.setPermanent(boolean0);
		Boolean boolean1 = resource0.getPermanent();
		assertTrue(boolean1);
	}

	@Test
	public void test02() throws Throwable {
		Resource resource0 = new Resource();
		resource0.setPattern((Boolean) null);
		Boolean boolean0 = resource0.getPattern();
		assertNull(boolean0);
	}

	@Test
	public void test03() throws Throwable {
		Resource resource0 = new Resource();
		Boolean boolean0 = new Boolean(true);
		resource0.setPattern(boolean0);
		Boolean boolean1 = resource0.getPattern();
		assertTrue(boolean1);
	}

	@Test
	public void test04() throws Throwable {
		Resource resource0 = new Resource();
		resource0.setName("o");
		String string0 = resource0.getName();
		assertEquals("o", string0);
	}

	@Test
	public void test05() throws Throwable {
		Resource resource0 = new Resource();
		resource0.setName("");
		String string0 = resource0.getName();
		assertEquals("", string0);
	}

	@Test
	public void test06() throws Throwable {
		Resource resource0 = new Resource();
		resource0.setName("+o>b#[Z*r)f^A;w=%G");
		Resource resource1 = new Resource();
		assertFalse(resource1.equals((Object) resource0));

		resource1.setName("+o>b#[Z*r)f^A;w=%G");
		boolean boolean0 = resource1.equals(resource0);
		assertTrue(resource1.equals((Object) resource0));
		assertTrue(boolean0);
	}

	@Test
	public void test07() throws Throwable {
		Resource resource0 = new Resource();
		Resource resource1 = new Resource();
		resource1.setName("");
		boolean boolean0 = resource0.equals(resource1);
		assertFalse(boolean0);
	}

	@Test
	public void test08() throws Throwable {
		Resource resource0 = new Resource();
		Resource resource1 = new Resource();
		resource1.setName("");
		boolean boolean0 = resource1.equals(resource0);
		assertFalse(resource1.equals((Object) resource0));
		assertFalse(boolean0);
	}

	@Test
	public void test09() throws Throwable {
		Resource resource0 = new Resource();
		Resource resource1 = new Resource();
		boolean boolean0 = resource1.equals(resource0);
		assertTrue(boolean0);
	}

	@Test
	public void test10() throws Throwable {
		Resource resource0 = new Resource();
		boolean boolean0 = resource0.equals((Object) null);
		assertFalse(boolean0);
	}

	@Test
	public void test11() throws Throwable {
		Resource resource0 = new Resource();
		boolean boolean0 = resource0.equals(resource0);
		assertTrue(boolean0);
	}

	@Test
	public void test12() throws Throwable {
		Resource resource0 = new Resource();
		Object object0 = new Object();
		boolean boolean0 = resource0.equals(object0);
		assertFalse(boolean0);
	}

	@Test
	public void test13() throws Throwable {
		Resource resource0 = new Resource();
		resource0.hashCode();
	}

	@Test
	public void test14() throws Throwable {
		Resource resource0 = new Resource();
		resource0.setPermanent((Boolean) null);
		Boolean boolean0 = resource0.getPermanent();
		assertNull(boolean0);
	}

	@Test
	public void test15() throws Throwable {
		Resource resource0 = new Resource();
		Boolean boolean0 = resource0.getPermanent();
		assertFalse(boolean0);
	}

	@Test
	public void test16() throws Throwable {
		Resource resource0 = new Resource();
		String string0 = resource0.getName();
		assertNull(string0);
	}

	@Test
	public void test17() throws Throwable {
		Resource resource0 = new Resource();
		Boolean boolean0 = resource0.getPattern();
		resource0.setPattern(boolean0);
		assertFalse(resource0.getPattern());
	}
}
